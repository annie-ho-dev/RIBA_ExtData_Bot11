<Activity mc:Ignorable="sap sap2010" x:Class="ONSConstructionByRegion_Transformations" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="dt_TransformedOutput" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="dt_WorkingImport" Type="InArgument(sd:DataTable)" />
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <this:ONSConstructionByRegion_Transformations.dt_WorkingImport>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:ONSConstructionByRegion_Transformations.dt_WorkingImport>
  <this:ONSConstructionByRegion_Transformations.Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:ONSConstructionByRegion_Transformations.Config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>918.4,953.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ONSConstructionByRegion_Transformations_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Azure.Models</x:String>
      <x:String>UiPath.Azure.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="24">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Azure</AssemblyReference>
      <AssemblyReference>UiPath.Azure.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="------- AUTOMATION SUBPROCESS-----------------------------------------------------------------------&#xA;&#xA;Name: &#xA;Bot Reference: RIBA Bot ##&#xA;&#xA;Description: Transformation of imported datatable. &#xA;&#xA;Input: &#xA;- dt_WorkingImport&#xA;&#xA;Output:&#xA;- dt_TransformedOutput&#xA;&#xA;Developer: &#xA;Date: " DisplayName="Transformation Flow" sap:VirtualizedContainerService.HintSize="633.6,888.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,157</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,157</av:Point>
          <av:Size x:Key="ShapeSize">200,68.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Transform Data" sap:VirtualizedContainerService.HintSize="616,2168" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="int_RowCounter" />
          <Variable x:TypeArguments="sd:DataTable" Name="dt_RegionList" />
          <Variable x:TypeArguments="sd:DataTable" Name="dt_PeriodTable" />
          <Variable x:TypeArguments="x:Int32" Name="int_Year" />
          <Variable x:TypeArguments="x:Int32" Name="int_Counter" />
          <Variable x:TypeArguments="sd:DataTable" Name="dt_RegionListTransposed" />
          <Variable x:TypeArguments="x:Int32" Name="int_Counter2" />
          <Variable x:TypeArguments="x:String" Name="txt_TransformedOutput" />
          <Variable x:TypeArguments="scg:List(sd:DataColumn)" Name="arr_empty" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FilterDataTable DataTable="[dt_WorkingImport]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="574.4,60" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_WorkingImport]" SelectColumnsMode="Keep">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">["Q"]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <Assign DisplayName="Assign- empty column index" sap:VirtualizedContainerService.HintSize="574.4,60" sap2010:WorkflowViewState.IdRef="Assign_21">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(sd:DataColumn)">[arr_empty]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(sd:DataColumn)">[dt_WorkingImport.Columns.Cast(Of DataColumn).Where(function(c) dt_WorkingImport.AsEnumerable.All(function(r) r(c) is Nothing OrElse String.IsNullOrEmpty(r(c).ToString()))).toList()]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="574.4,194.4" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arr_empty]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataColumn">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="item" />
              </ActivityAction.Argument>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                <Assign DisplayName="Assign- empty column index" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(sd:DataColumn)">[arr_empty]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(sd:DataColumn)">[dt_WorkingImport.Columns.Cast(Of DataColumn).Where(function(c) dt_WorkingImport.AsEnumerable.All(function(r) r(c) is Nothing OrElse String.IsNullOrEmpty(r(c).ToString()))).toList()]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="433.6,249.6" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[arr_empty]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sd:DataColumn">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[item.ColumnName]" DataTable="[dt_WorkingImport]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:RemoveDataColumn>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="[dt_WorkingImport.Columns.Count-1]" DataTable="[dt_WorkingImport]" DisplayName="Remove data column" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_12" />
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Quarter int" DataTable="[dt_WorkingImport]" DisplayName="Add Quarter integer column" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_6" />
        <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Date" DataTable="[dt_WorkingImport]" DisplayName="Add Date Column" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_7" />
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Geographical Region" DataTable="[dt_WorkingImport]" DisplayName="Add Geographical Region column" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_10" />
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Building Material Type" DataTable="[dt_WorkingImport]" DisplayName="Add Building Material Type" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_11" />
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Unique_Key" DataTable="[dt_WorkingImport]" DisplayName="Add Data Column- Unique Key" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_12" />
        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_WorkingImport]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="574.4,1073.6" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524.8,924.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[row(0).ToString=&quot;&quot;]" DisplayName="If- Fill in blanks" sap:VirtualizedContainerService.HintSize="483.2,332" sap2010:WorkflowViewState.IdRef="If_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[row(0)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[dt_WorkingImport.Rows(dt_WorkingImport.Rows.IndexOf(row)-1)(0).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[dt_WorkingImport.Rows(dt_WorkingImport.Rows.IndexOf(row))("Quarter int")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[IF( Trim(row(1).ToString) = "Q1", "1" ,IF( Trim(row(1).ToString) = "Q2", "4", IF( Trim(row(1).ToString) = "Q3", "7", IF( Trim(row(1).ToString).Contains("Q4"), "10", "Default"))))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign-Date" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("Date")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["01/"+row("Quarter int").ToString+"/"+row(0).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dt_WorkingImport.Columns(5).ColumnName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Ready Mixed Concrete (Th.cu.m.)"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("Geographical Region")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">["United Kingdom"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("Building Material Type")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Other Building Materials"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <ui:FilterDataTable DataTable="[dt_WorkingImport]" DisplayName="Filter Data Table- United Kingdom(Total)" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="574.4,60" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dt_TransformedOutput]" SelectColumnsMode="Keep">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="8">
              <InArgument x:TypeArguments="x:Int32">[8]</InArgument>
              <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
              <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
              <InArgument x:TypeArguments="x:Int32">[10]</InArgument>
              <InArgument x:TypeArguments="x:String">["Unique_Key"]</InArgument>
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_TransformedOutput]" DisplayName="For Each Row- add unique key" sap:VirtualizedContainerService.HintSize="574.4,52.8" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("Unique_Key")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row(0).ToString.Trim+row(1).ToString.Trim+row(2).ToString.Trim+row(3).ToString.Trim]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>